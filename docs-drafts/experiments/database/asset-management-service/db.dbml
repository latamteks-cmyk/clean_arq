Project tenancy_service {
  database_type: 'PostgreSQL'
  Note: 'RLS en todas las tablas. FKs compuestas por tenant_id.'
}

Table tenants {
  id uuid [pk]
  name text [not null]
  slug text [not null]
  country text
  timezone text
  created_at timestamptz [not null, default: `now()`]
  updated_at timestamptz [not null, default: `now()`]

  indexes {
    (slug) [unique, name: 'uq_tenants_slug']
  }
}

Table addresses {
  id uuid [pk]
  tenant_id uuid [not null]
  line1 text [not null]
  line2 text
  district text
  city text
  state text
  postal_code text
  country text
  latitude decimal
  longitude decimal
  created_at timestamptz [not null, default: `now()`]
  updated_at timestamptz [not null, default: `now()`]

  indexes {
    (tenant_id, id) [unique, name: 'uq_addresses_id_per_tenant']
  }
}

Table condominiums {
  id uuid [pk]
  tenant_id uuid [not null]
  name text [not null]
  code text [not null]     // cÃ³digo humano por tenant
  status text [not null, default: 'ACTIVE'] // ACTIVE | INACTIVE
  address_id uuid
  country text
  timezone text
  created_at timestamptz [not null, default: `now()`]
  updated_at timestamptz [not null, default: `now()`]

  indexes {
    (tenant_id, id) [unique, name: 'uq_condo_id_per_tenant']
    (tenant_id, code) [unique, name: 'uq_condo_code_per_tenant']
  }
}

Table buildings {
  id uuid [pk]
  tenant_id uuid [not null]
  condominium_id uuid [not null]
  code text [not null]     // torre/bloque
  name text
  floors int
  built_year int
  created_at timestamptz [not null, default: `now()`]
  updated_at timestamptz [not null, default: `now()`]

  indexes {
    (tenant_id, condominium_id, code) [unique, name: 'uq_building_code_per_condo']
  }
}

Table unit_types {
  id uuid [pk]
  tenant_id uuid [not null]
  code text [not null]
  name text [not null]
  kind text [not null]  // RESIDENTIAL | COMMERCIAL | PARKING | STORAGE | COMMON
  area_m2 decimal
  occupancy_limit int
  created_at timestamptz [not null, default: `now()`]
  updated_at timestamptz [not null, default: `now()`]

  indexes {
    (tenant_id, code) [unique, name: 'uq_unit_types_code_per_tenant']
  }
}

Table units {
  id uuid [pk]
  tenant_id uuid [not null]
  condominium_id uuid [not null]
  building_id uuid
  parent_unit_id uuid       // subunidad: estacionamiento, depÃ³sito
  type_id uuid [not null]
  code text [not null]      // ej: 701, A-201, P-12
  level text
  area_m2 decimal
  bedrooms int
  bathrooms int
  status text [not null, default: 'ACTIVE'] // ACTIVE | INACTIVE | BLOCKED
  created_at timestamptz [not null, default: `now()`]
  updated_at timestamptz [not null, default: `now()`]

  indexes {
    (tenant_id, condominium_id, code) [unique, name: 'uq_unit_code_per_condo']
    (tenant_id, building_id, code) [name: 'idx_unit_lookup_by_building']
  }
}

Table unit_identifiers {
  id uuid [pk]
  tenant_id uuid [not null]
  unit_id uuid [not null]
  kind text [not null]   // CATASTRAL | MATRIZ | EXTERNAL
  value text [not null]
  created_at timestamptz [not null, default: `now()`]

  indexes {
    (tenant_id, kind, value) [unique, name: 'uq_unit_identifier_value']
    (tenant_id, unit_id, kind) [name: 'idx_unit_identifier_by_unit']
  }
}

Table condominium_amenities {
  id uuid [pk]
  tenant_id uuid [not null]
  condominium_id uuid [not null]
  code text [not null]
  name text [not null]
  properties jsonb
  created_at timestamptz [not null, default: `now()`]
  updated_at timestamptz [not null, default: `now()`]

  indexes {
    (tenant_id, condominium_id, code) [unique, name: 'uq_condo_amenity_code']
  }
}

Table unit_amenities {
  id uuid [pk]
  tenant_id uuid [not null]
  unit_id uuid [not null]
  amenity text [not null]   // ej: BALCON, DEPOSITO, VISTA_MAR
  properties jsonb
  created_at timestamptz [not null, default: `now()`]

  indexes {
    (tenant_id, unit_id, amenity) [name: 'idx_unit_amenity']
  }
}

/* Relaciones (todas compuestas con tenant_id) */
Ref: condominiums.tenant_id > tenants.id
Ref: condominiums.(tenant_id, address_id) > addresses.(tenant_id, id)
Ref: buildings.(tenant_id, condominium_id) > condominiums.(tenant_id, id)
Ref: unit_types.tenant_id > tenants.id
Ref: units.(tenant_id, condominium_id) > condominiums.(tenant_id, id)
Ref: units.(tenant_id, building_id) > buildings.(tenant_id, id)
Ref: units.(tenant_id, parent_unit_id) - units.(tenant_id, id)
Ref: units.(tenant_id, type_id) > unit_types.(tenant_id, id)
Ref: unit_identifiers.(tenant_id, unit_id) > units.(tenant_id, id)
Ref: condominium_amenities.(tenant_id, condominium_id) > condominiums.(tenant_id, id)
Ref: unit_amenities.(tenant_id, unit_id) > units.(tenant_id, id)
